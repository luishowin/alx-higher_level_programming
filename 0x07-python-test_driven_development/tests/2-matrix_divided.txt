import unittest
from your_module import matrix_divided

class TestYourModule(unittest.TestCase):
    def test_matrix_divided_valid(self):
        # Test with valid inputs
        matrix_input = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
        divisor = 2
        result = matrix_divided(matrix_input, divisor)
        expected_result = [
            [0.5, 1.0, 1.5],
            [2.0, 2.5, 3.0],
            [3.5, 4.0, 4.5]
        ]
        self.assertEqual(result, expected_result)

    def test_matrix_divided_invalid_matrix(self):
        # Test with invalid matrix (not a list of lists)
        with self.assertRaises(TypeError):
            matrix_divided("invalid_matrix", 2)

    def test_matrix_divided_invalid_matrix_size(self):
        # Test with invalid matrix (rows have different sizes)
        invalid_matrix = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8]
        ]
        with self.assertRaises(TypeError):
            matrix_divided(invalid_matrix, 2)

    # Add more test cases for different scenarios

if __name__ == '__main__':
    unittest.main()